@use 'widths' as *;

// Partly from github.com/springload/react-accessible-accordion/src/css/fancy-example.css

.accordionDiv {
  display: inline-block;
  vertical-align: top;
  width: 49%; // Not sure why 50% doesn't work
  margin: 0;
  padding: 0;
  @media only screen and (max-width: $second-max-width) {
    width: 100%;
  }
}

.accordion {
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: 2px;
  margin-left: 0.25em;
  margin-right: 0.25em;
}

.accordion__item + .accordion__item {
  // Show a line separating items that are collapsed next to each other
  border-top: 1px solid rgba(0, 0, 0, 0.1);
}

.accordion__button {
  // Style the actual bit you click
  background-color: #f4f4f4;
  color: #444;
  cursor: pointer;
  padding: 1.25em;
  text-align: left;
  border: none;
  display: flex;

  // Time and name on left which takes up most space, abbreviation on right with little space.
  *  {
    margin: 0;
  }
  *:nth-child(1)  {
    flex-grow: 10;
    text-align: left;
  }
  *:nth-child(1)[navy="true"]  {
    font-weight: bold;
  }
  *:nth-child(2)  {
    flex-grow: 1;
    text-align: right;
  }
}

.accordion__button:hover {
  // Hovering over clicky bit
  background-color: #ddd;
}

.accordion__button:before {
  // The arrow that moves
  display: inline-block;
  content: '';
  height: 10px;
  width: 10px;
  margin-right: 12px;
  border-bottom: 2px solid currentColor;
  border-right: 2px solid currentColor;
  transform: rotate(-45deg);
}

.accordion__button[aria-expanded='true']::before,
.accordion__button[aria-selected='true']::before {
  // Move the arrow when the section is expanded
  transform: rotate(45deg);
}

// NOTE: This fixes the position of the arrows. It is in a separate section to remind me that there is likely a better
// way of doing this, and I have only tested the positioning in Firefox on my computer.
.accordion__button[aria-expanded="true"]::before,
.accordion__button[aria-selected="true"]::before {
  margin-top: 0;
}
.accordion__button::before {
  margin-top: 0.3em;
}

.accordion__panel {
  // The bit that holds the content
  padding: 2em;
  animation: fadein 0.35s ease-in;
  text-align: center;

  img {
    width: 100%;
    height: 18em;
    object-fit: cover;
  }
}

@keyframes fadein {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}
